/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */


plugins {
    id 'application'
}
repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {

    // Use JUnit test framework.
    // testImplementation 'junit:junit:4.13.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // https://mvnrepository.com/artifact/gnu.getopt/java-getopt
    implementation group: 'gnu.getopt', name: 'java-getopt', version: '1.0.13'

    implementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.29'

}

jar {
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA' 
    archiveClassifier = 'uber'

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}

test {
    useJUnitPlatform()
}

run {

    standardInput = System.in

}

   
application {
    // Define the main class for the application.
     if (project.hasProperty('mode')) {
        if (mode == 'client'){
            mainClass = 'distribufile.networking.Client'
        } 
        else if (mode == 'server'){
            mainClass = 'distribufile.networking.Server'
        }
    } else {
            println 'Invalid mode entered';
    }


}


